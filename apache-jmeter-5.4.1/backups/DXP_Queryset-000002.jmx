<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1440205510000</longProp>
        <longProp name="ThreadGroup.end_time">1440205510000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
        </CookieManager>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">C:/Users/Prasad.Gadhave/Downloads/Sample_KPI_QuerySet.csv</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">true</boolProp>
          <stringProp name="variableNames">TestUser</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="false">
          <stringProp name="CounterConfig.start">1</stringProp>
          <stringProp name="CounterConfig.end"></stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">loopcounter</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig guiclass="com.googlecode.jmeter.plugins.webdriver.config.gui.ChromeDriverConfigGui" testclass="com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig" testname="jp@gc - Chrome Driver Config" enabled="true">
          <stringProp name="WebDriverConfig.proxy_type">AUTO_DETECT</stringProp>
          <stringProp name="WebDriverConfig.proxy_pac_url"></stringProp>
          <stringProp name="WebDriverConfig.http_host">fpproxy.in.ril.com</stringProp>
          <intProp name="WebDriverConfig.http_port">8080</intProp>
          <boolProp name="WebDriverConfig.use_http_for_all_protocols">false</boolProp>
          <stringProp name="WebDriverConfig.https_host">fpproxy.in.ril.com</stringProp>
          <intProp name="WebDriverConfig.https_port">8080</intProp>
          <stringProp name="WebDriverConfig.ftp_host"></stringProp>
          <intProp name="WebDriverConfig.ftp_port">8080</intProp>
          <stringProp name="WebDriverConfig.socks_host"></stringProp>
          <intProp name="WebDriverConfig.socks_port">8080</intProp>
          <stringProp name="WebDriverConfig.no_proxy">localhost</stringProp>
          <boolProp name="WebDriverConfig.maximize_browser">true</boolProp>
          <boolProp name="WebDriverConfig.reset_per_iteration">false</boolProp>
          <boolProp name="WebDriverConfig.dev_mode">false</boolProp>
          <stringProp name="ChromeDriverConfig.chromedriver_path">C:\Tools\chromedriver.exe</stringProp>
          <boolProp name="ChromeDriverConfig.android_enabled">false</boolProp>
          <boolProp name="ChromeDriverConfig.headless_enabled">false</boolProp>
          <boolProp name="ChromeDriverConfig.insecurecerts_enabled">false</boolProp>
          <boolProp name="ChromeDriverConfig.incognito_enabled">true</boolProp>
          <boolProp name="ChromeDriverConfig.no_sandbox_enabled">false</boolProp>
        </com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="JioCentral-LoginPage" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;

WDS.sampleResult.sampleStart();

boolean go = true;

//url
String baseUrl = &quot;https://pcrepllica.jiolabs.com/pcdxp&quot;;
WDS.browser.get(baseUrl);
//WDS.browser.get(baseUrl + &quot;/&quot;);
Thread.sleep(100);

//click on sign-in
WDS.browser.findElement(By.xpath(&quot;/html/body/div[1]/header/nav/div/div[2]/ul/li/a&quot;)).click();
Thread.sleep(1000);

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${__threadNum}-${loopcounter}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="JioCentral_Credentials" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();
//domain id
WDS.browser.findElement(By.xpath(&quot;/html/body/div/div[2]/div[1]/form/input[3]&quot;)).sendKeys(new String[] {&quot;Prasad.Gadhave&quot;});
Thread.sleep(100);

//password
WDS.browser.findElement(By.xpath(&quot;/html/body/div/div[2]/div[1]/form/input[4]&quot;)).sendKeys( new String[] { &quot;need@2024&quot; } );
Thread.sleep(100);

//login
WDS.browser.findElement(By.xpath(&quot;//html/body/div/div[2]/div[1]/form/input[5]&quot;)).click();
Thread.sleep(1000);


WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click Menu" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.Keys;


WDS.sampleResult.sampleStart();

//click menu
WDS.browser.findElement(By.xpath(&quot;//header/nav[1]/div[1]/button[1]&quot;)).click();
Thread.sleep(500);
//click campaign
WDS.browser.findElement(By.xpath(&quot;//header/nav[1]/div[1]/div[1]/div[1]/ul[1]/li[7]/a[1]/i[1]&quot;)).click();
Thread.sleep(100);
//click schedule
WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Query Set&apos;)]&quot;)).click();
Thread.sleep(500);



WDS.sampleResult.sampleEnd();


</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click on add Queryset" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.Keys;


WDS.sampleResult.sampleStart();

//add 
WDS.browser.findElement(By.xpath(&quot;//span[contains(text(),&apos;Create&apos;)]&quot;)).click();
Thread.sleep(1000);

WDS.sampleResult.sampleEnd();


</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click schedule" enabled="false">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.Keys;


WDS.sampleResult.sampleStart();

//click menu
WDS.browser.findElement(By.xpath(&quot;//header/nav[1]/div[1]/button[1]&quot;)).click();
Thread.sleep(500);
//click campaign
WDS.browser.findElement(By.xpath(&quot;//header/nav[1]/div[1]/div[1]/div[1]/ul[1]/li[7]/a[1]/i[1]&quot;)).click();
Thread.sleep(100);
//click schedule
WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Schedule&apos;)]&quot;)).click();
Thread.sleep(1000);

//add campaign
WDS.browser.findElement(By.xpath(&quot;//span[contains(text(),&apos;Add Campaign&apos;)]&quot;)).click();
Thread.sleep(2000);

//name
WDS.browser.findElement(By.xpath(&quot;//input[@id=&apos;_com_pc_campaign_admin_web_CampaignAdminWebPortlet_INSTANCE_2F3Oe5jQGRM3_campaignName&apos;]&quot;)).sendKeys(new String[] {&quot;Prasad&quot;});
Thread.sleep(2000);
//queryset name
WDS.browser.findElement(By.xpath(&quot;//select[@id=&apos;_com_pc_campaign_admin_web_CampaignAdminWebPortlet_INSTANCE_2F3Oe5jQGRM3_querysetId&apos;]&quot;)).click();
WDS.browser.findElement(By.xpath(&quot;//option[contains(text(),&apos;testjp12377711253&apos;)]&quot;)).click();
Thread.sleep(2000);
//select comm type
WDS.browser.findElement(By.xpath(&quot;//select[@id=&apos;_com_pc_campaign_admin_web_CampaignAdminWebPortlet_INSTANCE_2F3Oe5jQGRM3_communicationType&apos;]&quot;)).click();
WDS.browser.findElement(By.xpath(&quot;//option[contains(text(),&apos;Whatsapp&apos;)][1]&quot;)).click();
Thread.sleep(2000);
// whatsapp template
WDS.browser.findElement(By.xpath(&quot;//select[@id=&apos;_com_pc_campaign_admin_web_CampaignAdminWebPortlet_INSTANCE_2F3Oe5jQGRM3_waTemplateId&apos;]&quot;)).click(); 
//WDS.browser.findElement(By.xpath(&quot;//option[contains(text(),&apos;pc_test_ob1&apos;)]&quot;)).click();
WDS.browser.findElement(By.xpath(&quot;//option[contains(text(),&apos;Test-Promo 2&apos;)]&quot;)).click();
Thread.sleep(2000);
WDS.browser.findElement(By.xpath(&quot;//select[@id=&apos;_com_pc_campaign_admin_web_CampaignAdminWebPortlet_INSTANCE_2F3Oe5jQGRM3_placField0&apos;]&quot;)).click();
Thread.sleep(200);
WDS.browser.findElement(By.xpath(&quot;//option[contains(text(),&apos;${PSUM_MTD_VS_LMTD_PERC}&apos;)]&quot;)).click();
Thread.sleep(200);
//text
WDS.browser.findElement(By.xpath(&quot;//textarea[@id=&apos;_com_pc_campaign_admin_web_CampaignAdminWebPortlet_INSTANCE_2F3Oe5jQGRM3_waBody&apos;]&quot;)).click();
Thread.sleep(100);
//frequency
WDS.browser.findElement(By.xpath(&quot;//select[@id=&apos;_com_pc_campaign_admin_web_CampaignAdminWebPortlet_INSTANCE_2F3Oe5jQGRM3_frequency&apos;]&quot;)).click();
WDS.browser.findElement(By.xpath(&quot;//option[contains(text(),&apos;Once&apos;)]&quot;)).click();
Thread.sleep(2000);
//start date
WDS.browser.findElement(By.xpath(&quot;//input[@id=&apos;_com_pc_campaign_admin_web_CampaignAdminWebPortlet_INSTANCE_2F3Oe5jQGRM3_startDate&apos;]&quot;)).click();
Thread.sleep(500);
WDS.browser.findElement(By.xpath(&quot;/html[1]/body[1]/div[1]/div[1]/div[1]/div[1]/div[1]/div[1]/div[2]/table[1]/tbody[1]/tr[2]/td[4]&quot;)).click();
//timeslot
WDS.browser.findElement(By.xpath(&quot;//select[@id=&apos;_com_pc_campaign_admin_web_CampaignAdminWebPortlet_INSTANCE_2F3Oe5jQGRM3_timeSlot1&apos;]&quot;)).click();
WDS.browser.findElement(By.xpath(&quot;//option[contains(text(),&apos;00:00&apos;)]&quot;)).click();
Thread.sleep(2000);
//submit
WDS.browser.findElement(By.xpath(&quot;//button[@id=&apos;_com_pc_campaign_admin_web_CampaignAdminWebPortlet_INSTANCE_2F3Oe5jQGRM3_itie&apos;]&quot;)).click();
Thread.sleep(2000);


WDS.sampleResult.sampleEnd();


</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Select dataset" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.Keys;

WDS.sampleResult.sampleStart();
//select dataset
WDS.browser.findElement(By.xpath(&quot;//select[@id=&apos;_campaign_admin_queryset_CampaignAdminQuerysetPortlet_INSTANCE_IBTC3YUC5Moy_datasetId&apos;]&quot;)).click();
Thread.sleep(100);
//choose 
WDS.browser.findElement(By.xpath(&quot;//body/div[@id=&apos;senna_surface1-screen_2&apos;]/div[@id=&apos;wrapper&apos;]/div[1]/section[1]/div[1]/div[1]/div[2]/div[1]/div[1]/section[1]/div[1]/div[1]/div[1]/form[1]/div[1]/div[1]/div[1]/select[1]/option[5]&quot;)).click();


WDS.sampleResult.sampleEnd();


</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Select_Queryset name " enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.Keys;


WDS.sampleResult.sampleStart();

// Queryset name 
WDS.browser.findElement(By.xpath(&quot;//input[@id=&apos;_campaign_admin_queryset_CampaignAdminQuerysetPortlet_INSTANCE_IBTC3YUC5Moy_querysetName&apos;]&quot;)).sendKeys(new String[] {&quot;test1&quot;});


WDS.sampleResult.sampleEnd();


</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Select_filter_Not_In" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.Keys;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.interactions.Actions;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;


WDS.sampleResult.sampleStart();
//col
WDS.browser.findElement(By.xpath(&quot;//select[@id=&apos;_campaign_admin_queryset_CampaignAdminQuerysetPortlet_INSTANCE_IBTC3YUC5Moy_column0&apos;]&quot;)).click();
WDS.browser.findElement(By.xpath(&quot;//option[contains(text(),&apos;PARTNER_ROLE_NAME&apos;)]&quot;)).click();
Thread.sleep(100);
//select operator
WDS.browser.findElement(By.xpath(&quot;//select[@id=&apos;_campaign_admin_queryset_CampaignAdminQuerysetPortlet_INSTANCE_IBTC3YUC5Moy_operatorcolumn0&apos;]&quot;)).click();
Thread.sleep(100);
WDS.browser.findElement(By.xpath(&quot;//option[contains(text(),&apos;NOT IN&apos;)]&quot;)).click();
//select
WDS.browser.findElement(By.xpath(&quot;//input[@id=&apos;s2id_autogen1&apos;]&quot;)).sendKeys(new String[] {&quot;ARD&quot;});
Thread.sleep(1000);
 Robot robot2 = new Robot();
    robot2.keyPress(KeyEvent.VK_ENTER);
    robot2.keyRelease(KeyEvent.VK_ENTER);
//select
//WDS.browser.findElement(By.xpath(&quot;//div[@id=&apos;select2-result-label-139&apos;]&quot;)).click();



WDS.sampleResult.sampleEnd();


</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Select_filter_Not_Equal" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.Keys;


WDS.sampleResult.sampleStart();
//col
WDS.browser.findElement(By.xpath(&quot;//select[@id=&apos;_campaign_admin_queryset_CampaignAdminQuerysetPortlet_INSTANCE_IBTC3YUC5Moy_numericcolumn0&apos;]&quot;)).click();
WDS.browser.findElement(By.xpath(&quot;//body/div[@id=&apos;senna_surface1-screen_2&apos;]/div[@id=&apos;wrapper&apos;]/div[1]/section[1]/div[1]/div[1]/div[2]/div[1]/div[1]/section[1]/div[1]/div[1]/div[1]/form[1]/div[2]/div[2]/div[2]/div[1]/div[1]/div[1]/select[1]/option[2]&quot;)).click();
Thread.sleep(100);
//select operator
WDS.browser.findElement(By.xpath(&quot;//select[@id=&apos;_campaign_admin_queryset_CampaignAdminQuerysetPortlet_INSTANCE_IBTC3YUC5Moy_operatornumericcolumn0&apos;]&quot;)).click();
Thread.sleep(100);
WDS.browser.findElement(By.xpath(&quot;//option[contains(text(),&apos;&lt;&gt;&apos;)]&quot;)).click();
//select
WDS.browser.findElement(By.xpath(&quot;//input[@id=&apos;_campaign_admin_queryset_CampaignAdminQuerysetPortlet_INSTANCE_IBTC3YUC5Moy_valuenumericcolumn0&apos;]&quot;)).sendKeys(new String[] {&quot;2&quot;});
Thread.sleep(100);



WDS.sampleResult.sampleEnd();


</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click On SMS Placeholder" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.Keys;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.interactions.Actions;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;



WDS.sampleResult.sampleStart();
//submit 
WDS.browser.findElement(By.xpath(&quot;//select[@id=&apos;_campaign_admin_queryset_CampaignAdminQuerysetPortlet_INSTANCE_IBTC3YUC5Moy_selectcolumn0&apos;]&quot;)).click();
WDS.browser.findElement(By.xpath(&quot;//body/div[@id=&apos;senna_surface1-screen_2&apos;]/div[@id=&apos;wrapper&apos;]/div[1]/section[1]/div[1]/div[1]/div[2]/div[1]/div[1]/section[1]/div[1]/div[1]/div[1]/form[1]/div[2]/div[3]/div[2]/div[1]/div[1]/div[1]/select[1]/option[3]&quot;)).click();
Thread.sleep(200);


WDS.sampleResult.sampleEnd();


</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click On Preview" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.Keys;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.interactions.Actions;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.awt.event.KeyEvent;



WDS.sampleResult.sampleStart();
//submit 
WDS.browser.findElement(By.xpath(&quot;//span[contains(text(),&apos;Preview&apos;)]&quot;)).click();

Thread.sleep(500);

WDS.sampleResult.sampleEnd();


</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <boolProp name="useGroupName">true</boolProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
