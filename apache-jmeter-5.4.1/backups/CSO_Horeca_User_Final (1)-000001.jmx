<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1440205510000</longProp>
        <longProp name="ThreadGroup.end_time">1440205510000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
        </CookieManager>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">C:\\Users\\jayaprakash.kunchaka\\Desktop\\LMSPT1\\PartnerCentral\\ITRD.csv</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">true</boolProp>
          <stringProp name="variableNames">username</stringProp>
        </CSVDataSet>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig guiclass="com.googlecode.jmeter.plugins.webdriver.config.gui.ChromeDriverConfigGui" testclass="com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig" testname="jp@gc - Chrome Driver Config" enabled="true">
          <stringProp name="WebDriverConfig.proxy_type">AUTO_DETECT</stringProp>
          <stringProp name="WebDriverConfig.proxy_pac_url"></stringProp>
          <stringProp name="WebDriverConfig.http_host">fpproxy.in.ril.com</stringProp>
          <intProp name="WebDriverConfig.http_port">8080</intProp>
          <boolProp name="WebDriverConfig.use_http_for_all_protocols">false</boolProp>
          <stringProp name="WebDriverConfig.https_host">fpproxy.in.ril.com</stringProp>
          <intProp name="WebDriverConfig.https_port">8080</intProp>
          <stringProp name="WebDriverConfig.ftp_host"></stringProp>
          <intProp name="WebDriverConfig.ftp_port">8080</intProp>
          <stringProp name="WebDriverConfig.socks_host"></stringProp>
          <intProp name="WebDriverConfig.socks_port">8080</intProp>
          <stringProp name="WebDriverConfig.no_proxy">localhost</stringProp>
          <boolProp name="WebDriverConfig.maximize_browser">true</boolProp>
          <boolProp name="WebDriverConfig.reset_per_iteration">false</boolProp>
          <boolProp name="WebDriverConfig.dev_mode">false</boolProp>
          <stringProp name="ChromeDriverConfig.chromedriver_path">C:\Tools\chromedriver.exe</stringProp>
          <boolProp name="ChromeDriverConfig.android_enabled">false</boolProp>
          <boolProp name="ChromeDriverConfig.headless_enabled">false</boolProp>
          <boolProp name="ChromeDriverConfig.insecurecerts_enabled">false</boolProp>
          <boolProp name="ChromeDriverConfig.incognito_enabled">false</boolProp>
          <boolProp name="ChromeDriverConfig.no_sandbox_enabled">false</boolProp>
          <boolProp name="ChromeDriverConfig.disable_dev_shm_usage">false</boolProp>
          <stringProp name="ChromeDriverConfig.additional_args"></stringProp>
          <stringProp name="ChromeDriverConfig.binary_path"></stringProp>
        </com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="JioCentral-LoginPage" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;

WDS.sampleResult.sampleStart();

boolean go = true;
String baseUrl = &quot;https://csocentral.jiolabs.com/csoanalytics&quot;;
WDS.browser.get(baseUrl + &quot;/&quot;);
Thread.sleep(2000);

Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();



</stringProp>
          <stringProp name="WebDriverSampler.parameters">${__threadNum}-${loopcounter}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="JioCentral_Credentials" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;
WDS.sampleResult.sampleStart();

WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;content-inner&apos;]/form/input[3]&quot;)).sendKeys(new String[] {&quot;50057773&quot;});
Thread.sleep(2000);
WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;content-inner&apos;]/form/input[4]&quot;)).sendKeys( new String[] { &quot;Aug@2204&quot;});
Thread.sleep(2000);
WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;content-inner&apos;]/form/input[5]&quot;)).click();
Thread.sleep(2000);



Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_on_Merch/Cust view" enabled="false">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();

WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;portlet_myapplications_WAR_myapplicationadminportlet&apos;]/div[2]/div/div/ul/li[2]/a&quot;)).click();

Thread.sleep(4000);

Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_On_HoReCa" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();

WDS.browser.findElement(By.xpath(&quot;//*[contains(text(),&apos;HoReCa&apos;)]&quot;)).click();
Thread.sleep(4000);

Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="HoReCa_User_Selection" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();

WDS.browser.findElement(By.xpath(&quot;(//*[@id=&apos;ololitClicked&apos;])[1]&quot;)).click();
Thread.sleep(4000);

WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;olDataList&apos;]/ul/li[1]&quot;)).click();
Thread.sleep(4000);

WDS.browser.findElement(By.xpath(&quot;(//*[@id=&apos;ololitClicked&apos;])[2]&quot;)).click();
Thread.sleep(4000);

WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;olDataList&apos;]/ul/li[1]&quot;)).click();
Thread.sleep(4000);

WDS.browser.findElement(By.xpath(&quot;(//*[@id=&apos;ololitClicked&apos;])[3]&quot;)).click();
Thread.sleep(4000);

WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;olDataList&apos;]/ul/li[2]&quot;)).click();
Thread.sleep(4000);

WDS.browser.findElement(By.xpath(&quot;//*[contains(text(),&apos;Submit&apos;)]&quot;)).click();
Thread.sleep(4000);

Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_On_User_Activity" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();
//Click on User Activity
WDS.browser.findElement(By.xpath(&quot;//div[contains(text(),&apos;User Activity&apos;)]&quot;)).click();
Thread.sleep(1000);

//Click on Total visits
//WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Total Visits&apos;)]&quot;)).click();
Thread.sleep(2000);

//Click on Productivity
//WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Productivity&apos;)]&quot;)).click();
Thread.sleep(2000);

//Click on Discipline
//WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Discipline&apos;)]&quot;)).click();
Thread.sleep(2000);

//Click on back
//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;businessList&apos;]/span/img&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;businessList&apos;]/span/img&quot;)).click();
Thread.sleep(4000);


//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;a&apos;]&quot;)).click();
Thread.sleep(4000);


Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_On_Total_visits" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();


//Click on Total visits
WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Total Visits&apos;)]&quot;)).click();
Thread.sleep(2000);




Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_On_Productivity" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();


//Click on Productivity
WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Productivity&apos;)]&quot;)).click();
Thread.sleep(2000);



Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_On_Discipline" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();


//Click on Discipline
WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Discipline&apos;)]&quot;)).click();
Thread.sleep(2000);




Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_On_User_back" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();


//Click on back
WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;businessList&apos;]/span/img&quot;)).click();
Thread.sleep(2000);



Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_On_My_Merchant" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();

//Click on My Merchants
WDS.browser.findElement(By.xpath(&quot;//div[contains(text(),&apos;My Merchants&apos;)]&quot;)).click();
Thread.sleep(2000);

//Click on Setup
//WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Setup&apos;)]&quot;)).click();
Thread.sleep(2000);

//Click on Sort Arrow
//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;setupDashboardCards&apos;]/div[1]/div[1]/div/div[3]/button/img&quot;)).click();
Thread.sleep(2000);

//Click on Sort Arrow
//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;setupDashboardCards&apos;]/div[1]/div[1]/div/div[3]/button/img&quot;)).click();
Thread.sleep(2000);

//Click on Onboarding Status
//WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Onboarding Status&apos;)]&quot;)).click();
Thread.sleep(2000);

//Click on Sort Arrow
//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;onboardStatusId&apos;]/div[1]/div[1]/div/div[3]/button/img&quot;)).click();
Thread.sleep(2000);

//Click on Sort Arrow
//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;onboardStatusId&apos;]/div[1]/div[1]/div/div[3]/button/img&quot;)).click();
Thread.sleep(2000);

//Click on Back
//WDS.browser.findElement(By.xpath(&quot;/html/body/header/div/div/div/div[1]/a/span/img&quot;)).click();
Thread.sleep(2000);


Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_On_Setup" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();

//Click on Setup
WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Setup&apos;)]&quot;)).click();
Thread.sleep(2000);

//Click on Sort Arrow
WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;setupDashboardCards&apos;]/div[1]/div[1]/div/div[3]/button/img&quot;)).click();
Thread.sleep(2000);

//Click on Sort Arrow
WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;setupDashboardCards&apos;]/div[1]/div[1]/div/div[3]/button/img&quot;)).click();
Thread.sleep(2000);




Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_On_Onboarding_Status" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();

//Click on Onboarding Status
WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Onboarding Status&apos;)]&quot;)).click();
Thread.sleep(2000);

//Click on Sort Arrow
WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;onboardStatusId&apos;]/div[1]/div[1]/div/div[3]/button/img&quot;)).click();
Thread.sleep(2000);

//Click on Sort Arrow
WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;onboardStatusId&apos;]/div[1]/div[1]/div/div[3]/button/img&quot;)).click();
Thread.sleep(2000);


Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_On_User_Activity_Back" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();


//Click on Back
WDS.browser.findElement(By.xpath(&quot;/html/body/header/div/div/div/div[1]/a/span/img&quot;)).click();
Thread.sleep(2000);


Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_On_Business" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();
WDS.browser.findElement(By.xpath(&quot;//div[contains(text(),&apos;Business&apos;)]&quot;)).click();
Thread.sleep(2000);
//Last 3 Days
//WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Last 3 Days&apos;)]&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;(//*[contains(text(),&apos;Unique Lines&apos;)])[3]&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;(//*[contains(text(),&apos;Unique Lines&apos;)])[3]&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;last-3-days&apos;]/tbody/tr[1]/td[6]/a&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;uniqLanding&apos;]/div/div[2]/div[2]/img&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;orderDetails&apos;]/img&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;uniqLanding&apos;]/div/div[3]/div[2]/img&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;orderDetails&apos;]/img&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;businessList&apos;]/span/img&quot;)).click();
Thread.sleep(2000);

//Last 7 Days

//WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Last 7 days&apos;)]&quot;)).click();
Thread.sleep(2000);


//WDS.browser.findElement(By.xpath(&quot;(//*[contains(text(),&apos;Unique Lines&apos;)])[5]&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;(//*[contains(text(),&apos;Unique Lines&apos;)])[5]&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;last-7-days&apos;]/tbody/tr[1]/td[6]/a&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;uniqLanding&apos;]/div/div[2]/div[2]/img&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;orderDetails&apos;]/img&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;uniqLanding&apos;]/div/div[3]/div[2]/img&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;orderDetails&apos;]/img&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;uniqLanding&apos;]/div/div[4]/div[2]/img&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;orderDetails&apos;]/img&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;uniqLanding&apos;]/div/div[5]/div[2]/img&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;orderDetails&apos;]/img&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;businessList&apos;]/span/img&quot;)).click();
Thread.sleep(2000);

//Month Wise
//WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Month Wise&apos;)]&quot;)).click();
Thread.sleep(2000);
//MTD
//WDS.browser.findElement(By.xpath(&quot;(//*[@id=&apos;mtdHead&apos;]/tr[2]/th[12])[1]&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;(//*[@id=&apos;mtdHead&apos;]/tr[2]/th[12])[1]&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;last-month&apos;]/tbody/tr[1]/td[12]/a&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;uniqLanding&apos;]/div/div[2]/div[2]/img&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;orderDetails&apos;]/img&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;uniqLanding&apos;]/div/div[3]/div[2]/img&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;orderDetails&apos;]/img&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;uniqLanding&apos;]/div/div[4]/div[2]/img&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;orderDetails&apos;]/img&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;uniqLanding&apos;]/div/div[5]/div[2]/img&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;orderDetails&apos;]/img&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;uniqLanding&apos;]/div/div[6]/div[2]/img&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;orderDetails&apos;]/img&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;uniqLanding&apos;]/div/div[7]/div[2]/img&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;orderDetails&apos;]/img&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;businessList&apos;]/span/img&quot;)).click();
Thread.sleep(2000);

//Today
//WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Today&apos;)]&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;businessList&apos;]/span/img&quot;)).click();
Thread.sleep(2000);


Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_On_Last_3_Days_tab_unique_lines_hyperlink" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();

//Last 3 Days
WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Last 3 Days&apos;)]&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;(//*[contains(text(),&apos;Unique Lines&apos;)])[3]&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;(//*[contains(text(),&apos;Unique Lines&apos;)])[3]&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;last-3-days&apos;]/tbody/tr[1]/td[6]/a&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;uniqLanding&apos;]/div/div[2]/div[2]/img&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;orderDetails&apos;]/img&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;uniqLanding&apos;]/div/div[3]/div[2]/img&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;orderDetails&apos;]/img&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;businessList&apos;]/span/img&quot;)).click();
Thread.sleep(2000);


Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_On_Last_7_Days_tab_unique_lines_hyperlink" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();

//Last 7 Days

WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Last 7 days&apos;)]&quot;)).click();
Thread.sleep(2000);


WDS.browser.findElement(By.xpath(&quot;(//*[contains(text(),&apos;Unique Lines&apos;)])[5]&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;(//*[contains(text(),&apos;Unique Lines&apos;)])[5]&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;last-7-days&apos;]/tbody/tr[1]/td[6]/a&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;uniqLanding&apos;]/div/div[2]/div[2]/img&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;orderDetails&apos;]/img&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;uniqLanding&apos;]/div/div[3]/div[2]/img&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;orderDetails&apos;]/img&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;uniqLanding&apos;]/div/div[4]/div[2]/img&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;orderDetails&apos;]/img&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;uniqLanding&apos;]/div/div[5]/div[2]/img&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;orderDetails&apos;]/img&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;businessList&apos;]/span/img&quot;)).click();
Thread.sleep(2000);




Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_On_Monthwise_tab_MTD_unique_lines_hyperlink" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();

//Month Wise
WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Month Wise&apos;)]&quot;)).click();
Thread.sleep(2000);
//MTD
WDS.browser.findElement(By.xpath(&quot;(//*[@id=&apos;mtdHead&apos;]/tr[2]/th[12])[1]&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;(//*[@id=&apos;mtdHead&apos;]/tr[2]/th[12])[1]&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;last-month&apos;]/tbody/tr[1]/td[12]/a&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;uniqLanding&apos;]/div/div[2]/div[2]/img&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;orderDetails&apos;]/img&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;uniqLanding&apos;]/div/div[3]/div[2]/img&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;orderDetails&apos;]/img&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;uniqLanding&apos;]/div/div[4]/div[2]/img&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;orderDetails&apos;]/img&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;uniqLanding&apos;]/div/div[5]/div[2]/img&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;orderDetails&apos;]/img&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;uniqLanding&apos;]/div/div[6]/div[2]/img&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;orderDetails&apos;]/img&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;uniqLanding&apos;]/div/div[7]/div[2]/img&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;orderDetails&apos;]/img&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;businessList&apos;]/span/img&quot;)).click();
Thread.sleep(2000);




Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_On_Today_tab" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();


//Today
WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Today&apos;)]&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;businessList&apos;]/span/img&quot;)).click();
Thread.sleep(2000);


Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_On_Business_Back" enabled="false">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();

WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;businessList&apos;]/span/img&quot;)).click();
Thread.sleep(2000);


Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_Category_Sales" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();

WDS.browser.findElement(By.xpath(&quot;//div[contains(text(),&apos;Category Sales&apos;)]&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[contains(text(),&apos;Order Value&apos;)]&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[contains(text(),&apos;Order Value&apos;)]&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;ps-table&apos;]/tbody/tr[1]/td[3]/a&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;businessList&apos;]/span/img&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;/html/body/header/div/div/div/div[1]/a/span/img&quot;)).click();
Thread.sleep(2000);


Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_Category_Sales_hyperlink" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();


WDS.browser.findElement(By.xpath(&quot;//*[contains(text(),&apos;Order Value&apos;)]&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;//*[contains(text(),&apos;Order Value&apos;)]&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;ps-table&apos;]/tbody/tr[1]/td[3]/a&quot;)).click();
Thread.sleep(2000);



Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_Category_Sales_back" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();

WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;businessList&apos;]/span/img&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;/html/body/header/div/div/div/div[1]/a/span/img&quot;)).click();
Thread.sleep(2000);


Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_Collection" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();

WDS.browser.findElement(By.xpath(&quot;//div[contains(text(),&apos;Collection&apos;)]&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Overdue &amp; Ageing&apos;)]&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;(//*[contains(text(),&apos; Overdue(₹)&apos;)])[1]&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;(//*[contains(text(),&apos; Overdue(₹)&apos;)])[1]&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;table-overdueAgeing&apos;]/tbody/tr[1]/td[3]/a&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[contains(text(),&apos;&gt; 7 Days&apos;)]&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[contains(text(),&apos;&gt; 7 Days&apos;)]&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[contains(text(),&apos;3 - 7 Days&apos;)]&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[contains(text(),&apos;3 - 7 Days&apos;)]&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[contains(text(),&apos;Upto 2 Days&apos;)]&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[contains(text(),&apos;Upto 2 Days&apos;)]&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;icon-close-cross-small-ui-system-outline&apos;]&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Payment Status&apos;)]&quot;)).click();
Thread.sleep(2000);

Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_Overdue_&amp;_Ageing" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();


WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Overdue &amp; Ageing&apos;)]&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;(//*[contains(text(),&apos; Overdue(₹)&apos;)])[1]&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;(//*[contains(text(),&apos; Overdue(₹)&apos;)])[1]&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;table-overdueAgeing&apos;]/tbody/tr[1]/td[3]/a&quot;)).click();
Thread.sleep(2000);



Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_on_&gt; 7 Days" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();

WDS.browser.findElement(By.xpath(&quot;//*[contains(text(),&apos;&gt; 7 Days&apos;)]&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;//*[contains(text(),&apos;&gt; 7 Days&apos;)]&quot;)).click();
Thread.sleep(2000);



Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_on_3 - 7 Days" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();

WDS.browser.findElement(By.xpath(&quot;//*[contains(text(),&apos;3 - 7 Days&apos;)]&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;//*[contains(text(),&apos;3 - 7 Days&apos;)]&quot;)).click();
Thread.sleep(2000);


Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_on_Upto_2_Days" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();


WDS.browser.findElement(By.xpath(&quot;//*[contains(text(),&apos;Upto 2 Days&apos;)]&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;//*[contains(text(),&apos;Upto 2 Days&apos;)]&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;icon-close-cross-small-ui-system-outline&apos;]&quot;)).click();
Thread.sleep(2000);



Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_on_Payment_status" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();

WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Payment Status&apos;)]&quot;)).click();
Thread.sleep(2000);

Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_Care" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();

WDS.browser.findElement(By.xpath(&quot;//*[contains(text(),&apos;Care&apos;)]&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Transactions&apos;)]&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Returns&apos;)]&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Service&apos;)]&quot;)).click();
Thread.sleep(2000);

//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;a&apos;]&quot;)).click();
Thread.sleep(2000);


//WDS.browser.findElement(By.xpath(&quot;//*[contains(text(),&apos;Care&apos;)]&quot;)).click();
Thread.sleep(4000);

//WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Transactions&apos;)]&quot;)).click();
Thread.sleep(4000);
//Click on care
//WDS.browser.findElement(By.xpath(&quot;//div[contains(text(),&apos;Care&apos;)]&quot;)).click();
Thread.sleep(4000);
//Click on transactions
//WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Transactions&apos;)]&quot;)).click();
Thread.sleep(4000);
//Click on view
//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;ps-table&apos;]/tbody/tr[1]/td[3]/a&quot;)).click();
Thread.sleep(4000);
//Click on back
//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;businessList&apos;]/span/img&quot;)).click();
Thread.sleep(4000);
//Click on returns
//WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Returns&apos;)]&quot;)).click();
Thread.sleep(4000);

//WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Returns&apos;)]&quot;)).click();
Thread.sleep(4000);
//Click on SR
//WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Service&apos;)]&quot;)).click();
Thread.sleep(4000);
//Click on sort
//WDS.browser.findElement(By.xpath(&quot;/html/body/div[2]/section/div[2]/div/div/div/div/div[1]/div[1]/div/div/div[2]/div[2]/div[1]/div/table/thead/tr[1]/th[3]&quot;)).click();
Thread.sleep(4000);
//Click on sort
//WDS.browser.findElement(By.xpath(&quot;/html/body/div[2]/section/div[2]/div/div/div/div/div[1]/div[1]/div/div/div[2]/div[2]/div[1]/div/table/thead/tr[1]/th[3]&quot;)).click();
Thread.sleep(4000);


//WDS.browser.findElement(By.xpath(&quot;/html/body/header/div/div/div/div[1]/a/span/img&quot;)).click();
Thread.sleep(4000);

//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;a&apos;]&quot;)).click();
Thread.sleep(4000);


Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_on_Transactions_Status" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();


WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Transactions&apos;)]&quot;)).click();
Thread.sleep(2000);



//WDS.browser.findElement(By.xpath(&quot;//*[contains(text(),&apos;Care&apos;)]&quot;)).click();
Thread.sleep(4000);

//WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Transactions&apos;)]&quot;)).click();
Thread.sleep(4000);
//Click on care
//WDS.browser.findElement(By.xpath(&quot;//div[contains(text(),&apos;Care&apos;)]&quot;)).click();
Thread.sleep(4000);
//Click on transactions
//WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Transactions&apos;)]&quot;)).click();
Thread.sleep(4000);
//Click on view
//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;ps-table&apos;]/tbody/tr[1]/td[3]/a&quot;)).click();
Thread.sleep(4000);
//Click on back
//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;businessList&apos;]/span/img&quot;)).click();
Thread.sleep(4000);
//Click on returns
//WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Returns&apos;)]&quot;)).click();
Thread.sleep(4000);

//WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Returns&apos;)]&quot;)).click();
Thread.sleep(4000);
//Click on SR
//WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Service&apos;)]&quot;)).click();
Thread.sleep(4000);
//Click on sort
//WDS.browser.findElement(By.xpath(&quot;/html/body/div[2]/section/div[2]/div/div/div/div/div[1]/div[1]/div/div/div[2]/div[2]/div[1]/div/table/thead/tr[1]/th[3]&quot;)).click();
Thread.sleep(4000);
//Click on sort
//WDS.browser.findElement(By.xpath(&quot;/html/body/div[2]/section/div[2]/div/div/div/div/div[1]/div[1]/div/div/div[2]/div[2]/div[1]/div/table/thead/tr[1]/th[3]&quot;)).click();
Thread.sleep(4000);


//WDS.browser.findElement(By.xpath(&quot;/html/body/header/div/div/div/div[1]/a/span/img&quot;)).click();
Thread.sleep(4000);

//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;a&apos;]&quot;)).click();
Thread.sleep(4000);


Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_on_Returns" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();


WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Returns&apos;)]&quot;)).click();
Thread.sleep(2000);




//WDS.browser.findElement(By.xpath(&quot;//*[contains(text(),&apos;Care&apos;)]&quot;)).click();
Thread.sleep(4000);

//WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Transactions&apos;)]&quot;)).click();
Thread.sleep(4000);
//Click on care
//WDS.browser.findElement(By.xpath(&quot;//div[contains(text(),&apos;Care&apos;)]&quot;)).click();
Thread.sleep(4000);
//Click on transactions
//WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Transactions&apos;)]&quot;)).click();
Thread.sleep(4000);
//Click on view
//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;ps-table&apos;]/tbody/tr[1]/td[3]/a&quot;)).click();
Thread.sleep(4000);
//Click on back
//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;businessList&apos;]/span/img&quot;)).click();
Thread.sleep(4000);
//Click on returns
//WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Returns&apos;)]&quot;)).click();
Thread.sleep(4000);

//WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Returns&apos;)]&quot;)).click();
Thread.sleep(4000);
//Click on SR
//WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Service&apos;)]&quot;)).click();
Thread.sleep(4000);
//Click on sort
//WDS.browser.findElement(By.xpath(&quot;/html/body/div[2]/section/div[2]/div/div/div/div/div[1]/div[1]/div/div/div[2]/div[2]/div[1]/div/table/thead/tr[1]/th[3]&quot;)).click();
Thread.sleep(4000);
//Click on sort
//WDS.browser.findElement(By.xpath(&quot;/html/body/div[2]/section/div[2]/div/div/div/div/div[1]/div[1]/div/div/div[2]/div[2]/div[1]/div/table/thead/tr[1]/th[3]&quot;)).click();
Thread.sleep(4000);


//WDS.browser.findElement(By.xpath(&quot;/html/body/header/div/div/div/div[1]/a/span/img&quot;)).click();
Thread.sleep(4000);

//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;a&apos;]&quot;)).click();
Thread.sleep(4000);


Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_on_Service" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();


WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Service&apos;)]&quot;)).click();
Thread.sleep(2000);




//WDS.browser.findElement(By.xpath(&quot;//*[contains(text(),&apos;Care&apos;)]&quot;)).click();
Thread.sleep(4000);

//WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Transactions&apos;)]&quot;)).click();
Thread.sleep(4000);
//Click on care
//WDS.browser.findElement(By.xpath(&quot;//div[contains(text(),&apos;Care&apos;)]&quot;)).click();
Thread.sleep(4000);
//Click on transactions
//WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Transactions&apos;)]&quot;)).click();
Thread.sleep(4000);
//Click on view
//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;ps-table&apos;]/tbody/tr[1]/td[3]/a&quot;)).click();
Thread.sleep(4000);
//Click on back
//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;businessList&apos;]/span/img&quot;)).click();
Thread.sleep(4000);
//Click on returns
//WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Returns&apos;)]&quot;)).click();
Thread.sleep(4000);

//WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Returns&apos;)]&quot;)).click();
Thread.sleep(4000);
//Click on SR
//WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Service&apos;)]&quot;)).click();
Thread.sleep(4000);
//Click on sort
//WDS.browser.findElement(By.xpath(&quot;/html/body/div[2]/section/div[2]/div/div/div/div/div[1]/div[1]/div/div/div[2]/div[2]/div[1]/div/table/thead/tr[1]/th[3]&quot;)).click();
Thread.sleep(4000);
//Click on sort
//WDS.browser.findElement(By.xpath(&quot;/html/body/div[2]/section/div[2]/div/div/div/div/div[1]/div[1]/div/div/div[2]/div[2]/div[1]/div/table/thead/tr[1]/th[3]&quot;)).click();
Thread.sleep(4000);


//WDS.browser.findElement(By.xpath(&quot;/html/body/header/div/div/div/div[1]/a/span/img&quot;)).click();
Thread.sleep(4000);

//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;a&apos;]&quot;)).click();
Thread.sleep(4000);


Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_Care_back" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();



WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;a&apos;]&quot;)).click();
Thread.sleep(2000);


//WDS.browser.findElement(By.xpath(&quot;//*[contains(text(),&apos;Care&apos;)]&quot;)).click();
Thread.sleep(4000);

//WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Transactions&apos;)]&quot;)).click();
Thread.sleep(4000);
//Click on care
//WDS.browser.findElement(By.xpath(&quot;//div[contains(text(),&apos;Care&apos;)]&quot;)).click();
Thread.sleep(4000);
//Click on transactions
//WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Transactions&apos;)]&quot;)).click();
Thread.sleep(4000);
//Click on view
//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;ps-table&apos;]/tbody/tr[1]/td[3]/a&quot;)).click();
Thread.sleep(4000);
//Click on back
//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;businessList&apos;]/span/img&quot;)).click();
Thread.sleep(4000);
//Click on returns
//WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Returns&apos;)]&quot;)).click();
Thread.sleep(4000);

//WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Returns&apos;)]&quot;)).click();
Thread.sleep(4000);
//Click on SR
//WDS.browser.findElement(By.xpath(&quot;//a[contains(text(),&apos;Service&apos;)]&quot;)).click();
Thread.sleep(4000);
//Click on sort
//WDS.browser.findElement(By.xpath(&quot;/html/body/div[2]/section/div[2]/div/div/div/div/div[1]/div[1]/div/div/div[2]/div[2]/div[1]/div/table/thead/tr[1]/th[3]&quot;)).click();
Thread.sleep(4000);
//Click on sort
//WDS.browser.findElement(By.xpath(&quot;/html/body/div[2]/section/div[2]/div/div/div/div/div[1]/div[1]/div/div/div[2]/div[2]/div[1]/div/table/thead/tr[1]/th[3]&quot;)).click();
Thread.sleep(4000);


//WDS.browser.findElement(By.xpath(&quot;/html/body/header/div/div/div/div[1]/a/span/img&quot;)).click();
Thread.sleep(4000);

//WDS.browser.findElement(By.xpath(&quot;//*[@id=&apos;a&apos;]&quot;)).click();
Thread.sleep(4000);


Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <boolProp name="useGroupName">true</boolProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
