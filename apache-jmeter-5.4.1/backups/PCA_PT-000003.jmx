<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1440205510000</longProp>
        <longProp name="ThreadGroup.end_time">1440205510000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
        </CookieManager>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="false">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename"></stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">true</boolProp>
          <stringProp name="variableNames">username</stringProp>
        </CSVDataSet>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="false">
          <stringProp name="CounterConfig.start">1</stringProp>
          <stringProp name="CounterConfig.end"></stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">loopcounter</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig guiclass="com.googlecode.jmeter.plugins.webdriver.config.gui.ChromeDriverConfigGui" testclass="com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig" testname="jp@gc - Chrome Driver Config" enabled="true">
          <stringProp name="WebDriverConfig.proxy_type">AUTO_DETECT</stringProp>
          <stringProp name="WebDriverConfig.proxy_pac_url"></stringProp>
          <stringProp name="WebDriverConfig.http_host">fpproxy.in.ril.com</stringProp>
          <intProp name="WebDriverConfig.http_port">8080</intProp>
          <boolProp name="WebDriverConfig.use_http_for_all_protocols">false</boolProp>
          <stringProp name="WebDriverConfig.https_host">fpproxy.in.ril.com</stringProp>
          <intProp name="WebDriverConfig.https_port">8080</intProp>
          <stringProp name="WebDriverConfig.ftp_host"></stringProp>
          <intProp name="WebDriverConfig.ftp_port">8080</intProp>
          <stringProp name="WebDriverConfig.socks_host"></stringProp>
          <intProp name="WebDriverConfig.socks_port">8080</intProp>
          <stringProp name="WebDriverConfig.no_proxy">localhost</stringProp>
          <boolProp name="WebDriverConfig.maximize_browser">true</boolProp>
          <boolProp name="WebDriverConfig.reset_per_iteration">false</boolProp>
          <boolProp name="WebDriverConfig.dev_mode">false</boolProp>
          <stringProp name="ChromeDriverConfig.chromedriver_path">C:\Tools\chromedriver.exe</stringProp>
          <boolProp name="ChromeDriverConfig.android_enabled">false</boolProp>
          <boolProp name="ChromeDriverConfig.headless_enabled">false</boolProp>
          <boolProp name="ChromeDriverConfig.insecurecerts_enabled">false</boolProp>
          <boolProp name="ChromeDriverConfig.incognito_enabled">false</boolProp>
          <boolProp name="ChromeDriverConfig.no_sandbox_enabled">false</boolProp>
        </com.googlecode.jmeter.plugins.webdriver.config.ChromeDriverConfig>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="PartnerCentralAnalytics-NHQ-LoginPage" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;

WDS.sampleResult.sampleStart();

boolean go = true;
//url

String baseUrl = &quot;https://pcanalytics.jiolabs.com/?token=lbfNR7pe8vbYBaTfsawirMMhjmEnTPwfA7Py6OmxHqmy9lH6jnP%2FTeY7ppzu7ZjriA4AfVAw53nplRCXCvXFsQ%3D%3D&quot;;
WDS.browser.get(baseUrl);
//WDS.browser.get(baseUrl + &quot;/&quot;);
Thread.sleep(2000);

//click on sign-in
//WDS.browser.findElement(By.xpath(&quot;/html[1]/body[1]/div[1]/header[1]/nav[1]/div[1]/div[2]/ul[1]/li[1]/a[1]&quot;)).click();
//Thread.sleep(2000);


Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();


</stringProp>
          <stringProp name="WebDriverSampler.parameters">${__threadNum}-${loopcounter}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="PartnerCentralAnalytics_NHQ_Credentials" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();
//domain id
WDS.browser.findElement(By.xpath(&quot;/html/body/div/div[2]/div[1]/form/input[3]&quot;)).sendKeys(new String[] {&quot;ayushi.pal&quot;});
Thread.sleep(1000);

//password
WDS.browser.findElement(By.xpath(&quot;/html/body/div/div[2]/div[1]/form/input[4]&quot;)).sendKeys( new String[] {&quot;Jio@9aim&quot; });
Thread.sleep(1000);

//login
WDS.browser.findElement(By.xpath(&quot;//html/body/div/div[2]/div[1]/form/input[5]&quot;)).click();
Thread.sleep(1000);


Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_on_Activation-Payout_1" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();
//Click Activation Payout

WDS.browser.findElement(By.xpath(&quot;/html[1]/body[1]/div[2]/div[1]/div[1]/div[1]/div[5]/div[1]/div[1]/h3[1]/a[1]&quot;)).click();
Thread.sleep(2000);


Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Set_History_Period-1" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();
//Set Calender 1
WDS.browser.findElement(By.xpath(&quot;(//button[text()=&apos;Pick a date&apos;])[1]&quot;)).click();
Thread.sleep(2000);
//previous month
WDS.browser.findElement(By.xpath(&quot;/html/body/div[5]/table[1]/tbody/tr/td[1]&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;/html/body/div[5]/table[1]/tbody/tr/td[1]&quot;)).click();
Thread.sleep(2000);

WDS.browser.findElement(By.xpath(&quot;/html/body/div[5]/table[1]/tbody/tr/td[1]&quot;)).click();
Thread.sleep(2000);

//Date 1
WDS.browser.findElement(By.xpath(&quot;/html/body/div[5]/table[2]/tr[5]/td[4]&quot;)).click();
Thread.sleep(2000);



//Set Calender 2
//WDS.browser.findElement(By.xpath(&quot;(//button[text()=&apos;Pick a date&apos;])[2]&quot;)).click();
//Thread.sleep(2000);
//previous date
//WDS.browser.findElement(By.xpath(&quot;(//div[@class=&apos;Zebra_DatePicker dp_visible&apos;]//tr//td)[3]&quot;)).click();
//Thread.sleep(2000);

//Date 2
//WDS.browser.findElement(By.xpath(&quot;/html[1]/body[1]/div[5]/table[2]/tr[5]/td[3]&quot;)).click();
//Thread.sleep(2000);


//Set
WDS.browser.findElement(By.xpath(&quot;/html/body/nav/div[2]/div/div/div[2]/span/form/div/input[7]&quot;)).click();
Thread.sleep(2000);



//Date d = new Date(1);
//SimpleDateFormat formatter = new SimpleDateFormat(&quot;dd-MMMM-yyyy&quot;);
//String date = formatter.format(d);
//String splitter[] = date.split(&quot;-&quot;);
//String month_year = splitter[1];
//String day = splitter[0]; 
//System.out.println(month_year);
//System.out.println(day);
//
//
////selectDate(month_year,day); 
////Thread.sleep(3000);
//
//
////public void selectDate(String month_year, String select_day) throws InterruptedException
////{ 
//List&lt;WebElement&gt; elements = driver.findElements(By.xpath(&quot;//div[@class=&apos;ui-datepicker-title&apos;]/span[1]&quot;));
//
//for (int i=0; i&lt;elements.size();i++)
//{
//System.out.println(elements.get(i).getText());
//
////Selecting the month
//if(elements.get(i).getText().equals(month_year))
//{ 
//
////Selecting the date 
//List&lt;WebElement&gt; days = driver.findElements(By.xpath(&quot;//div[@class=&apos;ui-datepicker-inline ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all ui-datepicker-multi ui-datepicker-multi-2&apos;]/div[2]/table/tbody/tr/td/a&quot;));
//
//for (WebElement d:days)
//{ 
//System.out.println(d.getText());
//if(d.getText().equals(select_day))
//{
//d.click();
//Thread.sleep(10000);
//return;
//}
//} 
//} 
//
//}

Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Set_History_Period_Range-1" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();

//click on region
WDS.browser.findElement(By.xpath(&quot;/html/body/div[3]/div[1]/div/div[2]/div[2]/form/div/div[1]/select/option[1]&quot;)).click();
Thread.sleep(2000);

//click on state
WDS.browser.findElement(By.xpath(&quot;/html/body/div[3]/div[1]/div/div[2]/div[2]/form/div/div[2]/select/option[4]&quot;)).click();
Thread.sleep(2000);

//click on scheme type
WDS.browser.findElement(By.xpath(&quot;/html/body/div[3]/div[1]/div/div[2]/div[2]/form/div/div[5]/select/option[3]&quot;)).click();
Thread.sleep(2000);

Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_On_History_Run-1" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();

//click on run
WDS.browser.findElement(By.xpath(&quot;/html/body/div[3]/div[1]/div/div[2]/div[2]/form/div/div[7]/input[3]&quot;)).click();
Thread.sleep(2000);


Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Set_Current_Period-1" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();
//Set Calender 1
WDS.browser.findElement(By.xpath(&quot;(//button[text()=&apos;Pick a date&apos;])[1]&quot;)).click();
Thread.sleep(2000);

//next month
WDS.browser.findElement(By.xpath(&quot;/html/body/div[5]/table[1]/tbody/tr/td[3]&quot;)).click();
Thread.sleep(2000);

//next month
WDS.browser.findElement(By.xpath(&quot;/html/body/div[5]/table[1]/tbody/tr/td[3]&quot;)).click();
Thread.sleep(2000);

//Date 1
WDS.browser.findElement(By.xpath(&quot;/html/body/div[5]/table[2]/tr[6]/td[2]&quot;)).click();
Thread.sleep(2000);



//Set Calender 2
//WDS.browser.findElement(By.xpath(&quot;(//button[text()=&apos;Pick a date&apos;])[2]&quot;)).click();
//Thread.sleep(2000);
//previous date
//WDS.browser.findElement(By.xpath(&quot;(//div[@class=&apos;Zebra_DatePicker dp_visible&apos;]//tr//td)[3]&quot;)).click();
//Thread.sleep(2000);

//Date 2
//WDS.browser.findElement(By.xpath(&quot;/html[1]/body[1]/div[5]/table[2]/tr[5]/td[3]&quot;)).click();
//Thread.sleep(2000);


//Set
WDS.browser.findElement(By.xpath(&quot;/html/body/nav/div[2]/div/div/div[2]/span/form/div/input[7]&quot;)).click();
Thread.sleep(2000);



//Date d = new Date(1);
//SimpleDateFormat formatter = new SimpleDateFormat(&quot;dd-MMMM-yyyy&quot;);
//String date = formatter.format(d);
//String splitter[] = date.split(&quot;-&quot;);
//String month_year = splitter[1];
//String day = splitter[0]; 
//System.out.println(month_year);
//System.out.println(day);
//
//
////selectDate(month_year,day); 
////Thread.sleep(3000);
//
//
////public void selectDate(String month_year, String select_day) throws InterruptedException
////{ 
//List&lt;WebElement&gt; elements = driver.findElements(By.xpath(&quot;//div[@class=&apos;ui-datepicker-title&apos;]/span[1]&quot;));
//
//for (int i=0; i&lt;elements.size();i++)
//{
//System.out.println(elements.get(i).getText());
//
////Selecting the month
//if(elements.get(i).getText().equals(month_year))
//{ 
//
////Selecting the date 
//List&lt;WebElement&gt; days = driver.findElements(By.xpath(&quot;//div[@class=&apos;ui-datepicker-inline ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all ui-datepicker-multi ui-datepicker-multi-2&apos;]/div[2]/table/tbody/tr/td/a&quot;));
//
//for (WebElement d:days)
//{ 
//System.out.println(d.getText());
//if(d.getText().equals(select_day))
//{
//d.click();
//Thread.sleep(10000);
//return;
//}
//} 
//} 
//
//}

Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Set_Current_Period_Range-2" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();

//click on region
WDS.browser.findElement(By.xpath(&quot;/html/body/div[3]/div[1]/div/div[2]/div[2]/form/div/div[1]/select/option[2]&quot;)).click();
Thread.sleep(2000);

//click on state
WDS.browser.findElement(By.xpath(&quot;/html/body/div[3]/div[1]/div/div[2]/div[2]/form/div/div[2]/select/option[1]&quot;)).click();
Thread.sleep(2000);

//click on scheme type
WDS.browser.findElement(By.xpath(&quot;/html/body/div[3]/div[1]/div/div[2]/div[2]/form/div/div[5]/select/option[3]&quot;)).click();
Thread.sleep(2000);

Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_On_Current_Run-1" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();

//click on run
WDS.browser.findElement(By.xpath(&quot;/html/body/div[3]/div[1]/div/div[2]/div[2]/form/div/div[7]/input[3]&quot;)).click();
Thread.sleep(2000);


Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_on_RechargePayout_from_dropdown_1" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();
//Click Dropdown

WDS.browser.findElement(By.xpath(&quot;/html[1]/body[1]/nav[1]/div[1]/div[3]/div[1]/button[1]/span[1]/span[1]&quot;)).click();
Thread.sleep(2000);

//Click on Recharge Payout

WDS.browser.findElement(By.xpath(&quot;/html[1]/body[1]/nav[1]/div[1]/div[3]/div[1]/div[1]/a[6]&quot;)).click();
Thread.sleep(2000);


Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Set_History_Period-2" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();
//Set Calender 1
WDS.browser.findElement(By.xpath(&quot;(//button[text()=&apos;Pick a date&apos;])[1]&quot;)).click();
Thread.sleep(2000);


//previous month
WDS.browser.findElement(By.xpath(&quot;/html/body/div[5]/table[1]/tbody/tr/td[1]&quot;)).click();
Thread.sleep(2000);

//previous month
WDS.browser.findElement(By.xpath(&quot;/html/body/div[5]/table[1]/tbody/tr/td[1]&quot;)).click();
Thread.sleep(2000);

//Date 1
WDS.browser.findElement(By.xpath(&quot;/html/body/div[5]/table[2]/tr[5]/td[4]&quot;)).click();
Thread.sleep(2000);



//Set Calender 2
//WDS.browser.findElement(By.xpath(&quot;(//button[text()=&apos;Pick a date&apos;])[2]&quot;)).click();
//Thread.sleep(2000);

//Date 2
//WDS.browser.findElement(By.xpath(&quot;/html[1]/body[1]/div[5]/table[2]/tr[5]/td[4]&quot;)).click();
//Thread.sleep(2000);

//Set
WDS.browser.findElement(By.xpath(&quot;/html/body/nav/div[2]/div/div/div[2]/span/form/div/input[7]&quot;)).click();
Thread.sleep(2000);


//Date d = new Date(1);
//SimpleDateFormat formatter = new SimpleDateFormat(&quot;dd-MMMM-yyyy&quot;);
//String date = formatter.format(d);
//String splitter[] = date.split(&quot;-&quot;);
//String month_year = splitter[1];
//String day = splitter[0]; 
//System.out.println(month_year);
//System.out.println(day);
//
//
////selectDate(month_year,day); 
////Thread.sleep(3000);
//
//
////public void selectDate(String month_year, String select_day) throws InterruptedException
////{ 
//List&lt;WebElement&gt; elements = driver.findElements(By.xpath(&quot;//div[@class=&apos;ui-datepicker-title&apos;]/span[1]&quot;));
//
//for (int i=0; i&lt;elements.size();i++)
//{
//System.out.println(elements.get(i).getText());
//
////Selecting the month
//if(elements.get(i).getText().equals(month_year))
//{ 
//
////Selecting the date 
//List&lt;WebElement&gt; days = driver.findElements(By.xpath(&quot;//div[@class=&apos;ui-datepicker-inline ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all ui-datepicker-multi ui-datepicker-multi-2&apos;]/div[2]/table/tbody/tr/td/a&quot;));
//
//for (WebElement d:days)
//{ 
//System.out.println(d.getText());
//if(d.getText().equals(select_day))
//{
//d.click();
//Thread.sleep(10000);
//return;
//}
//} 
//} 
//
//}

Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Set_History_Period_Range-2" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();

//click on region
WDS.browser.findElement(By.xpath(&quot;/html/body/div[3]/div[2]/div[2]/form/div/div[1]/select/option[1]&quot;)).click();
Thread.sleep(2000);

//click on state
WDS.browser.findElement(By.xpath(&quot;/html/body/div[3]/div[2]/div[2]/form/div/div[2]/select/option[4]&quot;)).click();
Thread.sleep(2000);

//click on scheme type
WDS.browser.findElement(By.xpath(&quot;/html/body/div[3]/div[2]/div[2]/form/div/div[5]/select&quot;)).click();
Thread.sleep(2000);

Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_On_History_Run-2" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();

//click on run
WDS.browser.findElement(By.xpath(&quot;/html[1]/body[1]/div[3]/div[2]/div[2]/form[1]/div[1]/div[7]/input[3]&quot;)).click();
Thread.sleep(2000);


Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Set_Current_Period-2" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();
//Set Calender 1
WDS.browser.findElement(By.xpath(&quot;(//button[text()=&apos;Pick a date&apos;])[1]&quot;)).click();
Thread.sleep(2000);

//next month
WDS.browser.findElement(By.xpath(&quot;/html/body/div[5]/table[1]/tbody/tr/td[3]&quot;)).click();
Thread.sleep(2000);

//next month
WDS.browser.findElement(By.xpath(&quot;/html/body/div[5]/table[1]/tbody/tr/td[3]&quot;)).click();
Thread.sleep(2000);

//Date 1
WDS.browser.findElement(By.xpath(&quot;/html/body/div[5]/table[2]/tr[6]/td[2]&quot;)).click();
Thread.sleep(2000);



//Set Calender 2
//WDS.browser.findElement(By.xpath(&quot;(//button[text()=&apos;Pick a date&apos;])[2]&quot;)).click();
//Thread.sleep(2000);

//Date 2
//WDS.browser.findElement(By.xpath(&quot;/html[1]/body[1]/div[5]/table[2]/tr[5]/td[4]&quot;)).click();
//Thread.sleep(2000);

//Set
WDS.browser.findElement(By.xpath(&quot;/html/body/nav/div[2]/div/div/div[2]/span/form/div/input[7]&quot;)).click();
Thread.sleep(2000);


//Date d = new Date(1);
//SimpleDateFormat formatter = new SimpleDateFormat(&quot;dd-MMMM-yyyy&quot;);
//String date = formatter.format(d);
//String splitter[] = date.split(&quot;-&quot;);
//String month_year = splitter[1];
//String day = splitter[0]; 
//System.out.println(month_year);
//System.out.println(day);
//
//
////selectDate(month_year,day); 
////Thread.sleep(3000);
//
//
////public void selectDate(String month_year, String select_day) throws InterruptedException
////{ 
//List&lt;WebElement&gt; elements = driver.findElements(By.xpath(&quot;//div[@class=&apos;ui-datepicker-title&apos;]/span[1]&quot;));
//
//for (int i=0; i&lt;elements.size();i++)
//{
//System.out.println(elements.get(i).getText());
//
////Selecting the month
//if(elements.get(i).getText().equals(month_year))
//{ 
//
////Selecting the date 
//List&lt;WebElement&gt; days = driver.findElements(By.xpath(&quot;//div[@class=&apos;ui-datepicker-inline ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all ui-datepicker-multi ui-datepicker-multi-2&apos;]/div[2]/table/tbody/tr/td/a&quot;));
//
//for (WebElement d:days)
//{ 
//System.out.println(d.getText());
//if(d.getText().equals(select_day))
//{
//d.click();
//Thread.sleep(10000);
//return;
//}
//} 
//} 
//
//}

Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Set_Current_Period_Range-2" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();

//click on region
WDS.browser.findElement(By.xpath(&quot;/html/body/div[3]/div[2]/div[2]/form/div/div[1]/select/option[1]&quot;)).click();
Thread.sleep(2000);

//click on state
WDS.browser.findElement(By.xpath(&quot;/html/body/div[3]/div[2]/div[2]/form/div/div[2]/select/option[4]&quot;)).click();
Thread.sleep(2000);

//click on scheme type
WDS.browser.findElement(By.xpath(&quot;/html/body/div[3]/div[2]/div[2]/form/div/div[5]/select/option&quot;)).click();
Thread.sleep(2000);

Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_On_Current_Run-2" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();

//click on run
WDS.browser.findElement(By.xpath(&quot;/html[1]/body[1]/div[3]/div[2]/div[2]/form[1]/div[1]/div[7]/input[3]&quot;)).click();
Thread.sleep(2000);


Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_on_DevicePayout_from_dropdown_1" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();
//Click Dropdown

WDS.browser.findElement(By.xpath(&quot;/html[1]/body[1]/nav[1]/div[1]/div[3]/div[1]/button[1]/span[1]/span[1]&quot;)).click();
Thread.sleep(2000);

//Click on Device Payout

WDS.browser.findElement(By.xpath(&quot;/html/body/nav/div[1]/div[3]/div/div/a[5]&quot;)).click();
Thread.sleep(2000);


Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Set_History_Period-3" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();
//Set Calender 1
WDS.browser.findElement(By.xpath(&quot;(//button[text()=&apos;Pick a date&apos;])[1]&quot;)).click();
Thread.sleep(2000);


//previous month
WDS.browser.findElement(By.xpath(&quot;/html/body/div[5]/table[1]/tbody/tr/td[1]&quot;)).click();
Thread.sleep(2000);

//previous month
WDS.browser.findElement(By.xpath(&quot;/html/body/div[5]/table[1]/tbody/tr/td[1]&quot;)).click();
Thread.sleep(2000);

//Date 1
WDS.browser.findElement(By.xpath(&quot;/html/body/div[5]/table[2]/tr[5]/td[4]&quot;)).click();
Thread.sleep(2000);



//Set Calender 2
//WDS.browser.findElement(By.xpath(&quot;(//button[text()=&apos;Pick a date&apos;])[2]&quot;)).click();
//.sleep(2000);

//Date 2
//WDS.browser.findElement(By.xpath(&quot;/html[1]/body[1]/div[5]/table[2]/tr[5]/td[4]&quot;)).click();
//Thread.sleep(2000);

//Set
WDS.browser.findElement(By.xpath(&quot;/html/body/nav/div[2]/div/div/div[2]/span/form/div/input[7]&quot;)).click();
Thread.sleep(3000);


//Date d = new Date(1);
//SimpleDateFormat formatter = new SimpleDateFormat(&quot;dd-MMMM-yyyy&quot;);
//String date = formatter.format(d);
//String splitter[] = date.split(&quot;-&quot;);
//String month_year = splitter[1];
//String day = splitter[0]; 
//System.out.println(month_year);
//System.out.println(day);
//
//
////selectDate(month_year,day); 
////Thread.sleep(3000);
//
//
////public void selectDate(String month_year, String select_day) throws InterruptedException
////{ 
//List&lt;WebElement&gt; elements = driver.findElements(By.xpath(&quot;//div[@class=&apos;ui-datepicker-title&apos;]/span[1]&quot;));
//
//for (int i=0; i&lt;elements.size();i++)
//{
//System.out.println(elements.get(i).getText());
//
////Selecting the month
//if(elements.get(i).getText().equals(month_year))
//{ 
//
////Selecting the date 
//List&lt;WebElement&gt; days = driver.findElements(By.xpath(&quot;//div[@class=&apos;ui-datepicker-inline ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all ui-datepicker-multi ui-datepicker-multi-2&apos;]/div[2]/table/tbody/tr/td/a&quot;));
//
//for (WebElement d:days)
//{ 
//System.out.println(d.getText());
//if(d.getText().equals(select_day))
//{
//d.click();
//Thread.sleep(10000);
//return;
//}
//} 
//} 
//
//}

Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Set_History_Period_Range-3" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();

//click on region
WDS.browser.findElement(By.xpath(&quot;/html/body/div[3]/div[1]/div/div[2]/div[2]/form/div/div[1]/select/option[2]&quot;)).click();
Thread.sleep(2000);

//click on state
WDS.browser.findElement(By.xpath(&quot;/html/body/div[3]/div[1]/div/div[2]/div[2]/form/div/div[2]/select/option[1]&quot;)).click();
Thread.sleep(2000);

//click on scheme type
WDS.browser.findElement(By.xpath(&quot;/html/body/div[3]/div[1]/div/div[2]/div[2]/form/div/div[5]/select/option[2]&quot;)).click();
Thread.sleep(2000);

Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_On_History_Run-3" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();

//click on run
WDS.browser.findElement(By.xpath(&quot;/html/body/div[3]/div[1]/div/div[2]/div[2]/form/div/div[7]/input[3]&quot;)).click();
Thread.sleep(2000);


Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Set_Current_Period-3" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();
//Set Calender 1
WDS.browser.findElement(By.xpath(&quot;(//button[text()=&apos;Pick a date&apos;])[1]&quot;)).click();
Thread.sleep(2000);


//next month
WDS.browser.findElement(By.xpath(&quot;/html/body/div[5]/table[1]/tbody/tr/td[3]&quot;)).click();
Thread.sleep(2000);

//next month
WDS.browser.findElement(By.xpath(&quot;/html/body/div[5]/table[1]/tbody/tr/td[3]&quot;)).click();
Thread.sleep(2000);

//Date 1
WDS.browser.findElement(By.xpath(&quot;/html/body/div[5]/table[2]/tr[6]/td[2]&quot;)).click();
Thread.sleep(2000);



//Set Calender 2
//WDS.browser.findElement(By.xpath(&quot;(//button[text()=&apos;Pick a date&apos;])[2]&quot;)).click();
//Thread.sleep(2000);

//Date 2
//WDS.browser.findElement(By.xpath(&quot;/html[1]/body[1]/div[5]/table[2]/tr[5]/td[4]&quot;)).click();
//Thread.sleep(2000);

//Set
WDS.browser.findElement(By.xpath(&quot;/html/body/nav/div[2]/div/div/div[2]/span/form/div/input[7]&quot;)).click();
Thread.sleep(2000);


//Date d = new Date(1);
//SimpleDateFormat formatter = new SimpleDateFormat(&quot;dd-MMMM-yyyy&quot;);
//String date = formatter.format(d);
//String splitter[] = date.split(&quot;-&quot;);
//String month_year = splitter[1];
//String day = splitter[0]; 
//System.out.println(month_year);
//System.out.println(day);
//
//
////selectDate(month_year,day); 
////Thread.sleep(3000);
//
//
////public void selectDate(String month_year, String select_day) throws InterruptedException
////{ 
//List&lt;WebElement&gt; elements = driver.findElements(By.xpath(&quot;//div[@class=&apos;ui-datepicker-title&apos;]/span[1]&quot;));
//
//for (int i=0; i&lt;elements.size();i++)
//{
//System.out.println(elements.get(i).getText());
//
////Selecting the month
//if(elements.get(i).getText().equals(month_year))
//{ 
//
////Selecting the date 
//List&lt;WebElement&gt; days = driver.findElements(By.xpath(&quot;//div[@class=&apos;ui-datepicker-inline ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all ui-datepicker-multi ui-datepicker-multi-2&apos;]/div[2]/table/tbody/tr/td/a&quot;));
//
//for (WebElement d:days)
//{ 
//System.out.println(d.getText());
//if(d.getText().equals(select_day))
//{
//d.click();
//Thread.sleep(10000);
//return;
//}
//} 
//} 
//
//}

Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Set_Current_Period_Range-3" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();

//click on region
//WDS.browser.findElement(By.xpath(&quot;/html/body/div[3]/div[1]/div/div[2]/div[2]/form/div/div[1]/select/option[2]&quot;))click();
//Thread.sleep(2000);

//click on state
//WDS.browser.findElement(By.xpath(&quot;/html/body/div[3]/div[1]/div/div[2]/div[2]/form/div/div[2]/select/option[1]&quot;)).click();
//Thread.sleep(2000);

//click on scheme type
//WDS.browser.findElement(By.xpath(&quot;/html/body/div[3]/div[1]/div/div[2]/div[2]/form/div/div[5]/select/option&quot;)).click();
//Thread.sleep(2000);

Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_On_Current_Run-3" enabled="true">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();

//click on run
WDS.browser.findElement(By.xpath(&quot;/html/body/div[3]/div[1]/div/div[2]/div[2]/form/div/div[7]/input[3]&quot;)).click();
Thread.sleep(2000);


Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_On_Sign-out_1" enabled="false">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();

//click on signout
WDS.browser.findElement(By.xpath(&quot;/html[1]/body[1]/nav[1]/div[1]/div[1]/a[1]/label[1]&quot;)).click();
Thread.sleep(2000);


Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="PartnerCentral-ZD-LoginPage_Activation-Payout" enabled="false">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;

WDS.sampleResult.sampleStart();

boolean go = true;
//url

String baseUrl = &quot;https://pcanalytics.jiolabs.com/?token=bBAAbbUk7OBmz75E4QNZXRj6BnMynqz9YoYt3O3dBSv4t1IC9KvqylnzJmzjj55OIWd%2FbR8moHBGuMa3CYG%2BlfUWmbEhEzQWvK2xh6cvOkc%3D&quot;;
WDS.browser.get(baseUrl);
//WDS.browser.get(baseUrl + &quot;/&quot;);
Thread.sleep(2000);

//click on sign-in
//WDS.browser.findElement(By.xpath(&quot;/html[1]/body[1]/div[1]/header[1]/nav[1]/div[1]/div[2]/ul[1]/li[1]/a[1]&quot;)).click();
//Thread.sleep(2000);


Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();


</stringProp>
          <stringProp name="WebDriverSampler.parameters">${__threadNum}-${loopcounter}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="PartnerCentral_ZD_Credentials_1" enabled="false">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();
//domain id
WDS.browser.findElement(By.xpath(&quot;/html/body/div/div[2]/div[1]/form/input[3]&quot;)).sendKeys(new String[] {&quot;ayushi.pal&quot;});
Thread.sleep(1000);

//password
WDS.browser.findElement(By.xpath(&quot;/html/body/div/div[2]/div[1]/form/input[4]&quot;)).sendKeys( new String[] {&quot;Jio@9aim&quot; });
Thread.sleep(1000);

//login
WDS.browser.findElement(By.xpath(&quot;/html[1]/body[1]/div[1]/div[2]/div[1]/form[1]/input[5]&quot;)).click();
Thread.sleep(1000);


Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_on_Activation-Payout_3" enabled="false">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();
//Click Activation Payout

WDS.browser.findElement(By.xpath(&quot;/html[1]/body[1]/div[2]/div[1]/div[1]/div[1]/div[5]/div[1]/div[1]/h3[1]/a[1]&quot;)).click();
Thread.sleep(2000);


Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Set_ZD_Date-3" enabled="false">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();
//Set Calender 1
WDS.browser.findElement(By.xpath(&quot;(//button[text()=&apos;Pick a date&apos;])[1]&quot;)).click();
Thread.sleep(2000);
//previous month
WDS.browser.findElement(By.xpath(&quot;(//div[@class=&apos;Zebra_DatePicker dp_visible&apos;]//tr//td)[1]&quot;)).click();
Thread.sleep(2000);

//Date 1
WDS.browser.findElement(By.xpath(&quot;/html[1]/body[1]/div[4]/table[2]/tr[4]/td[4]&quot;)).click();
Thread.sleep(2000);



//Set Calender 2
WDS.browser.findElement(By.xpath(&quot;(//button[text()=&apos;Pick a date&apos;])[2]&quot;)).click();
Thread.sleep(2000);
//previous date
//WDS.browser.findElement(By.xpath(&quot;(//div[@class=&apos;Zebra_DatePicker dp_visible&apos;]//tr//td)[3]&quot;)).click();
//Thread.sleep(2000);

//Date 2
WDS.browser.findElement(By.xpath(&quot;/html[1]/body[1]/div[5]/table[2]/tr[5]/td[3]&quot;)).click();
Thread.sleep(2000);


//Set
WDS.browser.findElement(By.xpath(&quot;/html/body/nav/div[2]/div/div/div[2]/span/form/div/input[7]&quot;)).click();
Thread.sleep(2000);



//Date d = new Date(1);
//SimpleDateFormat formatter = new SimpleDateFormat(&quot;dd-MMMM-yyyy&quot;);
//String date = formatter.format(d);
//String splitter[] = date.split(&quot;-&quot;);
//String month_year = splitter[1];
//String day = splitter[0]; 
//System.out.println(month_year);
//System.out.println(day);
//
//
////selectDate(month_year,day); 
////Thread.sleep(3000);
//
//
////public void selectDate(String month_year, String select_day) throws InterruptedException
////{ 
//List&lt;WebElement&gt; elements = driver.findElements(By.xpath(&quot;//div[@class=&apos;ui-datepicker-title&apos;]/span[1]&quot;));
//
//for (int i=0; i&lt;elements.size();i++)
//{
//System.out.println(elements.get(i).getText());
//
////Selecting the month
//if(elements.get(i).getText().equals(month_year))
//{ 
//
////Selecting the date 
//List&lt;WebElement&gt; days = driver.findElements(By.xpath(&quot;//div[@class=&apos;ui-datepicker-inline ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all ui-datepicker-multi ui-datepicker-multi-2&apos;]/div[2]/table/tbody/tr/td/a&quot;));
//
//for (WebElement d:days)
//{ 
//System.out.println(d.getText());
//if(d.getText().equals(select_day))
//{
//d.click();
//Thread.sleep(10000);
//return;
//}
//} 
//} 
//
//}

Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Set_ZD_Range-3" enabled="false">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();


//click on scheme type

WDS.browser.findElement(By.xpath(&quot;/html/body/div[3]/div[2]/div/div/div[2]/form/div[1]/select/option[3]&quot;)).click();
Thread.sleep(2000);

Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_On_Submit-1" enabled="false">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();

//click on run
WDS.browser.findElement(By.xpath(&quot;/html[1]/body[1]/div[3]/div[2]/div[1]/div[1]/div[2]/form[1]/div[5]/input[2]&quot;)).click();
Thread.sleep(2000);


Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_On_Sign-out_2" enabled="false">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();

//click on signout
WDS.browser.findElement(By.xpath(&quot;/html[1]/body[1]/nav[1]/div[1]/div[1]/a[1]/label[1]&quot;)).click();
Thread.sleep(2000);


Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="PartnerCentral-ZD-LoginPage_Recharge-Payout" enabled="false">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;

WDS.sampleResult.sampleStart();

boolean go = true;
//url

String baseUrl = &quot;https://pcanalytics.jiolabs.com/?token=bBAAbbUk7OBmz75E4QNZXYk0cl3iT2BmcvpDaoTZl8VUVgDPlnWAu7HBBPVsAErCFVa54DuyQ%2FttK%2BpVLIkfFHuuMMzm1lfeQ9M%2F57rGbXo%3D&quot;;
WDS.browser.get(baseUrl);
//WDS.browser.get(baseUrl + &quot;/&quot;);
Thread.sleep(2000);

//click on sign-in
//WDS.browser.findElement(By.xpath(&quot;/html[1]/body[1]/div[1]/header[1]/nav[1]/div[1]/div[2]/ul[1]/li[1]/a[1]&quot;)).click();
//Thread.sleep(2000);


Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();


</stringProp>
          <stringProp name="WebDriverSampler.parameters">${__threadNum}-${loopcounter}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="PartnerCentral_ZD_Credentials_2" enabled="false">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();
//domain id
WDS.browser.findElement(By.xpath(&quot;/html/body/div/div[2]/div[1]/form/input[3]&quot;)).sendKeys(new String[] {&quot;ayushi.pal&quot;});
Thread.sleep(1000);

//password
WDS.browser.findElement(By.xpath(&quot;/html/body/div/div[2]/div[1]/form/input[4]&quot;)).sendKeys( new String[] {&quot;Jio@9aim&quot; });
Thread.sleep(1000);

//login
WDS.browser.findElement(By.xpath(&quot;/html/body/div/div[2]/div[1]/form/input[5]&quot;)).click();
Thread.sleep(1000);


Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_on_Recharge-Payout_3" enabled="false">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();
//Click Activation Payout

WDS.browser.findElement(By.xpath(&quot;/html[1]/body[1]/div[2]/div[1]/div[1]/div[1]/div[6]/div[1]/div[1]/h3[1]/a[1]&quot;)).click();
Thread.sleep(2000);


Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Set_ZD_Date-4" enabled="false">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();


//Set Calender 2
WDS.browser.findElement(By.xpath(&quot;(//button[text()=&apos;Pick a date&apos;])[2]&quot;)).click();
Thread.sleep(2000);

//Date 2
WDS.browser.findElement(By.xpath(&quot;/html[1]/body[1]/div[5]/table[2]/tr[5]/td[4]&quot;)).click();
Thread.sleep(2000);

//Date 2
WDS.browser.findElement(By.xpath(&quot;/html/body/nav/div[2]/div/div/div[2]/span/form/div/input[7]&quot;)).click();
Thread.sleep(2000);


//Date d = new Date(1);
//SimpleDateFormat formatter = new SimpleDateFormat(&quot;dd-MMMM-yyyy&quot;);
//String date = formatter.format(d);
//String splitter[] = date.split(&quot;-&quot;);
//String month_year = splitter[1];
//String day = splitter[0]; 
//System.out.println(month_year);
//System.out.println(day);
//
//
////selectDate(month_year,day); 
////Thread.sleep(3000);
//
//
////public void selectDate(String month_year, String select_day) throws InterruptedException
////{ 
//List&lt;WebElement&gt; elements = driver.findElements(By.xpath(&quot;//div[@class=&apos;ui-datepicker-title&apos;]/span[1]&quot;));
//
//for (int i=0; i&lt;elements.size();i++)
//{
//System.out.println(elements.get(i).getText());
//
////Selecting the month
//if(elements.get(i).getText().equals(month_year))
//{ 
//
////Selecting the date 
//List&lt;WebElement&gt; days = driver.findElements(By.xpath(&quot;//div[@class=&apos;ui-datepicker-inline ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all ui-datepicker-multi ui-datepicker-multi-2&apos;]/div[2]/table/tbody/tr/td/a&quot;));
//
//for (WebElement d:days)
//{ 
//System.out.println(d.getText());
//if(d.getText().equals(select_day))
//{
//d.click();
//Thread.sleep(10000);
//return;
//}
//} 
//} 
//
//}

Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Set_ZD_Range-4" enabled="false">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();


//click on scheme type
WDS.browser.findElement(By.xpath(&quot;/html[1]/body[1]/div[3]/div[2]/div[2]/div[1]/form[1]/div[1]/select[1]&quot;)).sendKeys(new String [] {&quot;Retailer&quot;});
Thread.sleep(2000);

Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_On_Submit-2" enabled="false">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();

//click on run
WDS.browser.findElement(By.xpath(&quot;/html[1]/body[1]/div[3]/div[2]/div[2]/div[1]/form[1]/div[5]/input[2]&quot;)).click();
Thread.sleep(2000);


Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_on_DevicePayout_from_dropdown" enabled="false">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();
//Click Dropdown

WDS.browser.findElement(By.xpath(&quot;/html[1]/body[1]/nav[1]/div[1]/div[3]/div[1]/button[1]/span[1]/span[1]&quot;)).click();
Thread.sleep(2000);

//Click on Device Payout

WDS.browser.findElement(By.xpath(&quot;/html[1]/body[1]/nav[1]/div[1]/div[3]/div[1]/div[1]/a[5]&quot;)).click();
Thread.sleep(2000);


Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Set_Date-3" enabled="false">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();
//Set Calender 1
WDS.browser.findElement(By.xpath(&quot;(//button[text()=&apos;Pick a date&apos;])[1]&quot;)).click();
Thread.sleep(2000);
//previous month
WDS.browser.findElement(By.xpath(&quot;(//div[@class=&apos;Zebra_DatePicker dp_visible&apos;]//tr//td)[1]&quot;)).click();
Thread.sleep(2000);

//Date 1
WDS.browser.findElement(By.xpath(&quot;((//div[@class=&apos;Zebra_DatePicker dp_visible&apos;]//tr)[3]//td)[6]&quot;)).click();
Thread.sleep(2000);



//Set Calender 2
WDS.browser.findElement(By.xpath(&quot;(//button[text()=&apos;Pick a date&apos;])[2]&quot;)).click();
Thread.sleep(2000);
//previous date
WDS.browser.findElement(By.xpath(&quot;(//div[@class=&apos;Zebra_DatePicker dp_visible&apos;]//tr//td)[3]&quot;)).click();
Thread.sleep(2000);

//Date 2
WDS.browser.findElement(By.xpath(&quot;((//div[@class=&apos;Zebra_DatePicker dp_visible&apos;]//tr)[5]//td)[5]&quot;)).click();
Thread.sleep(2000);



//Date d = new Date(1);
//SimpleDateFormat formatter = new SimpleDateFormat(&quot;dd-MMMM-yyyy&quot;);
//String date = formatter.format(d);
//String splitter[] = date.split(&quot;-&quot;);
//String month_year = splitter[1];
//String day = splitter[0]; 
//System.out.println(month_year);
//System.out.println(day);
//
//
////selectDate(month_year,day); 
////Thread.sleep(3000);
//
//
////public void selectDate(String month_year, String select_day) throws InterruptedException
////{ 
//List&lt;WebElement&gt; elements = driver.findElements(By.xpath(&quot;//div[@class=&apos;ui-datepicker-title&apos;]/span[1]&quot;));
//
//for (int i=0; i&lt;elements.size();i++)
//{
//System.out.println(elements.get(i).getText());
//
////Selecting the month
//if(elements.get(i).getText().equals(month_year))
//{ 
//
////Selecting the date 
//List&lt;WebElement&gt; days = driver.findElements(By.xpath(&quot;//div[@class=&apos;ui-datepicker-inline ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all ui-datepicker-multi ui-datepicker-multi-2&apos;]/div[2]/table/tbody/tr/td/a&quot;));
//
//for (WebElement d:days)
//{ 
//System.out.println(d.getText());
//if(d.getText().equals(select_day))
//{
//d.click();
//Thread.sleep(10000);
//return;
//}
//} 
//} 
//
//}

Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Set_Range-3" enabled="false">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();

//click on region
WDS.browser.findElement(By.xpath(&quot;/html[1]/body[1]/div[3]/div[1]/div[1]/div[2]/div[2]/form[1]/div[1]/div[1]/select[1]&quot;)).sendKeys(new String [] {&quot;South&quot;});
Thread.sleep(2000);

//click on state
WDS.browser.findElement(By.xpath(&quot;/html[1]/body[1]/div[3]/div[1]/div[1]/div[2]/div[2]/form[1]/div[1]/div[2]/select[1]&quot;)).sendKeys(new String [] {&quot;Rajasthan&quot;});
Thread.sleep(2000);

//click on scheme type
//WDS.browser.findElement(By.xpath(&quot;/html[1]/body[1]/div[3]/div[1]/div[1]/div[2]/div[2]/form[1]/div[1]/div[5]/select[1]&quot;)).click();
//Thread.sleep(2000);

Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler guiclass="com.googlecode.jmeter.plugins.webdriver.sampler.gui.WebDriverSamplerGui" testclass="com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler" testname="Click_On_Run-3" enabled="false">
          <stringProp name="WebDriverSampler.script">import java.io.File;
import org.apache.commons.io.FileUtils;
import openqa.selenium.OutputType.*;
import org.openqa.selenium.*;
import org.openqa.selenium.support.ui.*;
import java.util.Random;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.WebElement;

WDS.sampleResult.sampleStart();

//click on run
WDS.browser.findElement(By.xpath(&quot;/html[1]/body[1]/div[3]/div[1]/div[1]/div[2]/div[2]/form[1]/div[1]/div[7]/input[3]&quot;)).click();
Thread.sleep(2000);


Random r = new Random();
if ( r.nextInt(2) == 0 ){
 File mFile = ((TakesScreenshot)WDS.browser).getScreenshotAs(OutputType.FILE);
 FileUtils.copyFile(mFile, new File(&quot;C:/full backup/screenshotsjmeter/&quot; + WDS.name + &quot;-&quot; + WDS.parameters + &quot;.png&quot;));
}

WDS.sampleResult.sampleEnd();

</stringProp>
          <stringProp name="WebDriverSampler.parameters">${username}</stringProp>
          <stringProp name="WebDriverSampler.language">java</stringProp>
        </com.googlecode.jmeter.plugins.webdriver.sampler.WebDriverSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
          <boolProp name="useGroupName">true</boolProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
